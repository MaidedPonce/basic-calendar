{"version":3,"file":"static/js/377.92518f88.chunk.js","mappings":"mLAIA,MA4CA,EA5CeA,KACb,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IACvBC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAQjD,OANAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAS,IAAIP,GAAQQ,MACzB,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAEG,MAAQ,IAAID,KAAKD,EAAEE,QAE1CR,EAAgBG,EAAO,GACtB,CAACP,KAEFa,EAAAA,EAAAA,MAAA,WAASC,UAAU,yBAAwBC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,UAC7CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGNC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iEAAgEC,SAC3EZ,EAAac,OAAS,EACrBd,EAAae,KAAI,CAACC,EAAOC,KAErBP,EAAAA,EAAAA,MAAA,MAEEC,UAAU,0CAAyCC,SAAA,EAEnDF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,2BAA0BC,SAAA,CACvC,KACAM,EAAAA,EAAAA,GAAUF,EAAMP,MAAMU,MACrB,KACAD,EAAAA,EAAAA,GAAUF,EAAMP,MAAMW,QACtB,KACAF,EAAAA,EAAAA,GAAUF,EAAMP,MAAMY,SAE1BR,EAAAA,EAAAA,KAAA,QAAMF,UAAU,uBAAsBC,SAAEI,EAAMM,SAXzC,GAAQ,OAALN,QAAK,IAALA,OAAK,EAALA,EAAOM,OAAOL,QAgB5BJ,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oBAAmBC,SAAC,6BAG7B,C,gBC5CP,SAASM,EAAUK,GACxB,MAAMC,EAAO,IAAIhB,KAAKe,GAKtB,MAAO,CACLJ,MALkBK,EAAKC,WAMvBL,QALoBI,EAAKE,aAMzBL,KALiBG,EAAKG,cAO1B,C","sources":["components/Agenda.js","utils/parseDate.js"],"sourcesContent":["import { CalendarContext } from 'context/CalendarContext'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { parseDate } from 'utils/parseDate'\n\nconst Agenda = () => {\n  const { events } = useContext(CalendarContext)\n  const [sortedEvents, setSortedEvents] = useState([])\n\n  useEffect(() => {\n    const sorted = [...events].sort(\n      (a, b) => new Date(a.time) - new Date(b.time)\n    )\n    setSortedEvents(sorted)\n  }, [events])\n  return (\n    <section className='flex flex-col lg:w-1/4'>\n      <div className='font-bold text-2xl min-h-9 m-4'>\n        <h1>My agenda</h1>\n      </div>\n\n      <ul className='lg:m-4 overflow-auto rounded-md shadow-md p-2 max-w-max m-auto'>\n        {sortedEvents.length > 0 ? (\n          sortedEvents.map((event, index) => {\n            return (\n              <li\n                key={`${event?.name}${index}`}\n                className='grid grid-cols-2 m-4 items-center gap-4'\n              >\n                <span className='text-gray-500 text-start'>\n                  {' '}\n                  {parseDate(event.time).hours +\n                    ':' +\n                    parseDate(event.time).minutes +\n                    ' ' +\n                    parseDate(event.time).year}\n                </span>\n                <span className='text-end font-medium'>{event.name}</span>\n              </li>\n            )\n          })\n        ) : (\n          <p className='m-4 text-gray-500'>No events scheduled.</p>\n        )}\n      </ul>\n    </section>\n  )\n}\n\nexport default Agenda\n","export function parseDate(timeString) {\n  const date = new Date(timeString)\n  const parsedHours = date.getHours()\n  const parsedMinutes = date.getMinutes()\n  const parsedYear = date.getFullYear()\n\n  return {\n    hours: parsedHours,\n    minutes: parsedMinutes,\n    year: parsedYear,\n  }\n}\n"],"names":["Agenda","events","useContext","CalendarContext","sortedEvents","setSortedEvents","useState","useEffect","sorted","sort","a","b","Date","time","_jsxs","className","children","_jsx","length","map","event","index","parseDate","hours","minutes","year","name","timeString","date","getHours","getMinutes","getFullYear"],"sourceRoot":""}